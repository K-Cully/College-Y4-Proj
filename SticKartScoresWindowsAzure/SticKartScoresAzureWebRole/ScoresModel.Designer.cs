//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SticKartScores_0Model", "FK_ActivePlayers_Statistics", "Statistic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SticKartScoresAzureWebRole.Statistic), "ActivePlayer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SticKartScoresAzureWebRole.ActivePlayer), true)]

#endregion

namespace SticKartScoresAzureWebRole
{
    #region Contexts
    
    /// <summary>
    /// A class representation of the SticKartScores_0Entities database context.
    /// </summary>
    public partial class SticKartScores_0Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SticKartScores_0Entities object using the connection string found in the 'SticKartScores_0Entities' section of the application configuration file.
        /// </summary>
        public SticKartScores_0Entities() : base("name=SticKartScores_0Entities", "SticKartScores_0Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SticKartScores_0Entities object.
        /// </summary>
        public SticKartScores_0Entities(string connectionString) : base(connectionString, "SticKartScores_0Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SticKartScores_0Entities object.
        /// </summary>
        public SticKartScores_0Entities(EntityConnection connection) : base(connection, "SticKartScores_0Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        /// <summary>
        /// Runs on the creation of the context.
        /// </summary>
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties

        /// <summary>
        /// Gets the elements stored in the high score table.
        /// </summary>
        public ObjectSet<HighScore> HighScores
        {
            get
            {
                if ((_HighScores == null))
                {
                    _HighScores = base.CreateObjectSet<HighScore>("HighScores");
                }
                return _HighScores;
            }
        }

        /// <summary>
        /// The high score table.
        /// </summary>
        private ObjectSet<HighScore> _HighScores;

        /// <summary>
        /// Gets the elements stored in the active players table.
        /// </summary>
        public ObjectSet<ActivePlayer> ActivePlayers
        {
            get
            {
                if ((_ActivePlayers == null))
                {
                    _ActivePlayers = base.CreateObjectSet<ActivePlayer>("ActivePlayers");
                }
                return _ActivePlayers;
            }
        }

        /// <summary>
        /// The active players table.
        /// </summary>
        private ObjectSet<ActivePlayer> _ActivePlayers;

        /// <summary>
        /// Gets the elements stored in the statistics table.
        /// </summary>
        public ObjectSet<Statistic> Statistics
        {
            get
            {
                if ((_Statistics == null))
                {
                    _Statistics = base.CreateObjectSet<Statistic>("Statistics");
                }
                return _Statistics;
            }
        }

        /// <summary>
        /// The statistics table.
        /// </summary>
        private ObjectSet<Statistic> _Statistics;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HighScores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHighScores(HighScore highScore)
        {
            base.AddObject("HighScores", highScore);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActivePlayers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivePlayers(ActivePlayer activePlayer)
        {
            base.AddObject("ActivePlayers", activePlayer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Statistics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatistics(Statistic statistic)
        {
            base.AddObject("Statistics", statistic);
        }

        #endregion

    }

    #endregion

    #region Entities

    /// <summary>
    /// Holds details of an active player table entry.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SticKartScores_0Model", Name="ActivePlayer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivePlayer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActivePlayer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ip">Initial value of the Ip property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="player">Initial value of the Player property.</param>
        /// <param name="session">Initial value of the Session property.</param>
        /// <param name="externalPort">Initial value of the ExternalPort property.</param>
        /// <param name="gamePort">Initial value of the GamePort property.</param>
        public static ActivePlayer CreateActivePlayer(global::System.Int32 id, global::System.String ip, global::System.String state, global::System.Int32 player, global::System.Int32 session, global::System.String externalPort, global::System.String gamePort)
        {
            ActivePlayer activePlayer = new ActivePlayer();
            activePlayer.Id = id;
            activePlayer.Ip = ip;
            activePlayer.State = state;
            activePlayer.Player = player;
            activePlayer.Session = session;
            activePlayer.ExternalPort = externalPort;
            activePlayer.GamePort = gamePort;
            return activePlayer;
        }

        #endregion

        #region Primitive Properties

        /// <summary>
        /// Gets or sets the id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }

        /// <summary>
        /// The id.
        /// </summary>
        private global::System.Int32 _Id;

        /// <summary>
        /// Runs when the id value is changing.
        /// </summary>
        /// <param name="value">The new value.</param>
        partial void OnIdChanging(global::System.Int32 value);

        /// <summary>
        /// Runs when the id value is changed.
        /// </summary>
        partial void OnIdChanged();

        /// <summary>
        /// Gets or sets the ip address.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ip
        {
            get
            {
                return _Ip;
            }
            set
            {
                OnIpChanging(value);
                ReportPropertyChanging("Ip");
                _Ip = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ip");
                OnIpChanged();
            }
        }

        /// <summary>
        /// The ip address.
        /// </summary>
        private global::System.String _Ip;

        /// <summary>
        /// Runs when the ip value is changing.
        /// </summary>
        /// <param name="value">The new value.</param>
        partial void OnIpChanging(global::System.String value);

        /// <summary>
        /// Runs when the ip value is changed.
        /// </summary>
        partial void OnIpChanged();

        /// <summary>
        /// Gets or sets the state.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }

        /// <summary>
        /// The state.
        /// </summary>
        private global::System.String _State;

        /// <summary>
        /// Runs when the state value is changing.
        /// </summary>
        /// <param name="value">The new value.</param>
        partial void OnStateChanging(global::System.String value);

        /// <summary>
        /// Runs when the state value is changed.
        /// </summary>
        partial void OnStateChanged();

        /// <summary>
        /// Gets or sets the player number.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Player
        {
            get
            {
                return _Player;
            }
            set
            {
                OnPlayerChanging(value);
                ReportPropertyChanging("Player");
                _Player = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Player");
                OnPlayerChanged();
            }
        }

        /// <summary>
        /// The player number.
        /// </summary>
        private global::System.Int32 _Player;

        /// <summary>
        /// Runs when the player value is changing.
        /// </summary>
        /// <param name="value">The new value.</param>
        partial void OnPlayerChanging(global::System.Int32 value);

        /// <summary>
        /// Runs when the player value is changed.
        /// </summary>
        partial void OnPlayerChanged();

        /// <summary>
        /// Gets or sets the session number.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Session
        {
            get
            {
                return _Session;
            }
            set
            {
                OnSessionChanging(value);
                ReportPropertyChanging("Session");
                _Session = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Session");
                OnSessionChanged();
            }
        }

        /// <summary>
        /// The session number.
        /// </summary>
        private global::System.Int32 _Session;

        /// <summary>
        /// Runs when the session value is changing.
        /// </summary>
        /// <param name="value">The new value.</param>
        partial void OnSessionChanging(global::System.Int32 value);

        /// <summary>
        /// Runs when the session value is changed.
        /// </summary>
        partial void OnSessionChanged();

        /// <summary>
        /// Gets or sets the external port.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExternalPort
        {
            get
            {
                return _ExternalPort;
            }
            set
            {
                OnExternalPortChanging(value);
                ReportPropertyChanging("ExternalPort");
                _ExternalPort = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExternalPort");
                OnExternalPortChanged();
            }
        }

        /// <summary>
        /// The external port.
        /// </summary>
        private global::System.String _ExternalPort;

        /// <summary>
        /// Runs when the external port value is changing.
        /// </summary>
        /// <param name="value">The new value.</param>
        partial void OnExternalPortChanging(global::System.String value);

        /// <summary>
        /// Runs when the external port value is changed.
        /// </summary>
        partial void OnExternalPortChanged();

        /// <summary>
        /// Gets or sets the game port.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GamePort
        {
            get
            {
                return _GamePort;
            }
            set
            {
                OnGamePortChanging(value);
                ReportPropertyChanging("GamePort");
                _GamePort = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GamePort");
                OnGamePortChanged();
            }
        }

        /// <summary>
        /// The game port.
        /// </summary>
        private global::System.String _GamePort;

        /// <summary>
        /// Runs when the external game value is changing.
        /// </summary>
        /// <param name="value">The new value.</param>
        partial void OnGamePortChanging(global::System.String value);

        /// <summary>
        /// Runs when the game port value is changed.
        /// </summary>
        partial void OnGamePortChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// Gets or sets an active player entry's statistic reference value.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SticKartScores_0Model", "FK_ActivePlayers_Statistics", "Statistic")]
        public Statistic Statistic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statistic>("SticKartScores_0Model.FK_ActivePlayers_Statistics", "Statistic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statistic>("SticKartScores_0Model.FK_ActivePlayers_Statistics", "Statistic").Value = value;
            }
        }

        /// <summary>
        /// Gets or sets an active player entry's statistic reference.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Statistic> StatisticReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statistic>("SticKartScores_0Model.FK_ActivePlayers_Statistics", "Statistic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Statistic>("SticKartScores_0Model.FK_ActivePlayers_Statistics", "Statistic", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// A high score table entry.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SticKartScores_0Model", Name="HighScore")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HighScore : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HighScore object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        public static HighScore CreateHighScore(global::System.Int32 id, global::System.Int32 level, global::System.String name, global::System.Int32 score)
        {
            HighScore highScore = new HighScore();
            highScore.Id = id;
            highScore.Level = level;
            highScore.Name = name;
            highScore.Score = score;
            return highScore;
        }

        #endregion

        #region Primitive Properties

        /// <summary>
        /// Gets or sets the id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }

        /// <summary>
        /// The id.
        /// </summary>
        private global::System.Int32 _Id;

        /// <summary>
        /// Runs when the id value is changing.
        /// </summary>
        /// <param name="value">The new value.</param>
        partial void OnIdChanging(global::System.Int32 value);

        /// <summary>
        /// Runs when the id value is changed.
        /// </summary>
        partial void OnIdChanged();

        /// <summary>
        /// Gets or sets the level number.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }

        /// <summary>
        /// The level number.
        /// </summary>
        private global::System.Int32 _Level;

        /// <summary>
        /// Runs when the level value is changing.
        /// </summary>
        /// <param name="value">The new value.</param>
        partial void OnLevelChanging(global::System.Int32 value);

        /// <summary>
        /// Runs when the level value is changed.
        /// </summary>
        partial void OnLevelChanged();

        /// <summary>
        /// Gets or sets the name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }

        /// <summary>
        /// The name.
        /// </summary>
        private global::System.String _Name;

        /// <summary>
        /// Runs when the name value is changing.
        /// </summary>
        /// <param name="value">The new value.</param>
        partial void OnNameChanging(global::System.String value);

        /// <summary>
        /// Runs when the name value is changed.
        /// </summary>
        partial void OnNameChanged();

        /// <summary>
        /// Gets or sets the score.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }

        /// <summary>
        /// The score.
        /// </summary>
        private global::System.Int32 _Score;

        /// <summary>
        /// Runs when the score value is changing.
        /// </summary>
        /// <param name="value">The new value.</param>
        partial void OnScoreChanging(global::System.Int32 value);

        /// <summary>
        /// Runs when the score value is changed.
        /// </summary>
        partial void OnScoreChanged();

        #endregion

    
    }
    
    /// <summary>
    /// A statistic table entry.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SticKartScores_0Model", Name="Statistic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Statistic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Statistic object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="gamesPlayed">Initial value of the GamesPlayed property.</param>
        /// <param name="gamesWon">Initial value of the GamesWon property.</param>
        /// <param name="gamesLost">Initial value of the GamesLost property.</param>
        public static Statistic CreateStatistic(global::System.Int32 id, global::System.String name, global::System.String password, global::System.Int32 gamesPlayed, global::System.Int32 gamesWon, global::System.Int32 gamesLost)
        {
            Statistic statistic = new Statistic();
            statistic.Id = id;
            statistic.Name = name;
            statistic.Password = password;
            statistic.GamesPlayed = gamesPlayed;
            statistic.GamesWon = gamesWon;
            statistic.GamesLost = gamesLost;
            return statistic;
        }

        #endregion

        #region Primitive Properties

        /// <summary>
        /// Gets or sets the id.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }

        /// <summary>
        /// The id.
        /// </summary>
        private global::System.Int32 _Id;

        /// <summary>
        /// Runs when the id value is changing.
        /// </summary>
        /// <param name="value">The new value.</param>
        partial void OnIdChanging(global::System.Int32 value);

        /// <summary>
        /// Runs when the id value is changed.
        /// </summary>
        partial void OnIdChanged();

        /// <summary>
        /// Gets or sets the name.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }

        /// <summary>
        /// The name.
        /// </summary>
        private global::System.String _Name;

        /// <summary>
        /// Runs when the name value is changing.
        /// </summary>
        /// <param name="value">The new value.</param>
        partial void OnNameChanging(global::System.String value);

        /// <summary>
        /// Runs when the name value is changed.
        /// </summary>
        partial void OnNameChanged();

        /// <summary>
        /// Gets or sets the password.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }

        /// <summary>
        /// The password.
        /// </summary>
        private global::System.String _Password;

        /// <summary>
        /// Runs when the password value is changing.
        /// </summary>
        /// <param name="value">The new value.</param>
        partial void OnPasswordChanging(global::System.String value);

        /// <summary>
        /// Runs when the password value is changed.
        /// </summary>
        partial void OnPasswordChanged();

        /// <summary>
        /// Gets or sets the number of games played.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GamesPlayed
        {
            get
            {
                return _GamesPlayed;
            }
            set
            {
                OnGamesPlayedChanging(value);
                ReportPropertyChanging("GamesPlayed");
                _GamesPlayed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GamesPlayed");
                OnGamesPlayedChanged();
            }
        }

        /// <summary>
        /// The number of games played.
        /// </summary>
        private global::System.Int32 _GamesPlayed;

        /// <summary>
        /// Runs when the games played value is changing.
        /// </summary>
        /// <param name="value">The new value.</param>
        partial void OnGamesPlayedChanging(global::System.Int32 value);

        /// <summary>
        /// Runs when the games played value is changed.
        /// </summary>
        partial void OnGamesPlayedChanged();

        /// <summary>
        /// Gets or sets the number of games won.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GamesWon
        {
            get
            {
                return _GamesWon;
            }
            set
            {
                OnGamesWonChanging(value);
                ReportPropertyChanging("GamesWon");
                _GamesWon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GamesWon");
                OnGamesWonChanged();
            }
        }

        /// <summary>
        /// The number of games won.
        /// </summary>
        private global::System.Int32 _GamesWon;

        /// <summary>
        /// Runs when the games won value is changing.
        /// </summary>
        /// <param name="value">The new value.</param>
        partial void OnGamesWonChanging(global::System.Int32 value);

        /// <summary>
        /// Runs when the games won value is changed.
        /// </summary>
        partial void OnGamesWonChanged();

        /// <summary>
        /// Gets or sets the number of games lost.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GamesLost
        {
            get
            {
                return _GamesLost;
            }
            set
            {
                OnGamesLostChanging(value);
                ReportPropertyChanging("GamesLost");
                _GamesLost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GamesLost");
                OnGamesLostChanged();
            }
        }

        /// <summary>
        /// The number of games lost.
        /// </summary>
        private global::System.Int32 _GamesLost;

        /// <summary>
        /// Runs when the games lost value is changing.
        /// </summary>
        /// <param name="value">The new value.</param>
        partial void OnGamesLostChanging(global::System.Int32 value);

        /// <summary>
        /// Runs when the games lost value is changed.
        /// </summary>
        partial void OnGamesLostChanged();

        #endregion

    
        #region Navigation Properties

        /// <summary>
        /// Gets or sets the active players table which references the statistic.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SticKartScores_0Model", "FK_ActivePlayers_Statistics", "ActivePlayer")]
        public EntityCollection<ActivePlayer> ActivePlayers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivePlayer>("SticKartScores_0Model.FK_ActivePlayers_Statistics", "ActivePlayer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivePlayer>("SticKartScores_0Model.FK_ActivePlayers_Statistics", "ActivePlayer", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
